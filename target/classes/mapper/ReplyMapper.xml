<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.parsley.mapper.ReplyMapper">

    <!--  评论信息   -->
    <resultMap id="replyAndUser" type="Reply" >

        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="post_id" property="postId" jdbcType="INTEGER" />
        <result column="reply_user_id" property="replyUserId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="device" property="device" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="LONGVARCHAR" />

        <association property="user" javaType="User">
            <id column="id" property="id" jdbcType="INTEGER" />
            <result column="username" property="username" jdbcType="VARCHAR" />
            <result column="avatar" property="avatar" jdbcType="VARCHAR" />
        </association>
    </resultMap>

    <!-- 指定post的replies -->
    <select id="getRepliesOfPost" resultMap="replyAndUser" parameterType="java.lang.Integer" >
        SELECT reply.*,user.username,user.avatar
        from reply,user
        where reply.reply_user_id = user.id and reply.post_id = #{postId,jdbcType=INTEGER}
        order by create_time ASC ;
    </select>

    <!-- 获取评论总量 -->
    <select id="getRepliesNum" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
        SELECT count(id)
        FROM reply
        WHERE post_id = #{postId,jdbcType=INTEGER}
    </select>

    <!-- 删除评论 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from reply
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 添加评论 -->
    <insert id="insert" parameterType="Reply" >
        insert into reply (post_id, reply_user_id,
                           create_time, update_time,
                           content)
        values ( #{postId,jdbcType=INTEGER}, #{replyUserId,jdbcType=INTEGER},
                 #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                 #{content,jdbcType=LONGVARCHAR})
    </insert>

</mapper>